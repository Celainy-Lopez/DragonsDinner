@page "/Estados/Create"
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@inject EstadosService estadosService
@inject NavigationManager navigationManager
@inject IJSRuntime js
@inject ToastService Toast
@attribute [Authorize(Roles = "Admin")]

<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />

<!-- bootstrap core css -->
<link rel="stylesheet" type="text/css" href="css/bootstrap.css" />

<!--owl slider stylesheet -->
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css" />
<!-- nice select  -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-nice-select/1.1.0/css/nice-select.min.css" integrity="sha512-CruCP+TD3yXzlvvijET8wV5WxxEh5H8P4cmz0RFbKK6FlZ2sYl3AEsKlLPHbniXKSrDdFewhbmBK5skbdsASbQ==" crossorigin="anonymous" />
<!-- font awesome style -->
<link href="css/font-awesome.min.css" rel="stylesheet" />

<!-- Custom styles for this template -->
<link href="css/style.css" rel="stylesheet" />
<!-- responsive style -->
<link href="css/responsive.css" rel="stylesheet" />

<link href="CreateCategorias.css" rel="stylesheet" />


<div class="bg-box">
    <img src="/images/Fondo.jpg" alt="">
</div>


<PageTitle>Nueva estado</PageTitle>
<EditForm Model="Estado" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card central-card shadow-lg">
            <div class="card-header text-center">
                <h2 class="card-title">Crear Estado</h2>
            </div>
            <div class="card-body">
                @*EstadoId*@
                <label for="id" class="form-label"> <strong>Estado ID</strong></label>
                <InputNumber id="id" class="form-control" @bind-Value="Estado.EstadoId" readonly></InputNumber>
                <ValidationMessage For="@(() =>Estado.EstadoId)"></ValidationMessage>

                @*Descripcion*@
                <label for="id" class="form-label"> <strong>Descripci&oacute;n</strong></label>
                <InputText id="id" class="form-control" @bind-Value="Estado.Descripcion" placeholder="Iniciado"></InputText>
                <ValidationMessage For="@(() =>Estado.Descripcion)"></ValidationMessage>

            </div>

            <div class="card-footer">
                <a href="/Estados/Index"
                   class="btn btn-outline-secondary">
                    <span class="bi bi-arrow-left mt-3"></span> Volver
                </a>
                <button type="submit" class="btn btn-orange bi bi-floppy"> Guardar</button>
            </div>
        </div>

    </div>
</EditForm>

@code {
    public EstadosDto Estado { get; set; } = new EstadosDto();
    public List<EstadosDto> ListEstado {get;set;} = [];

    public async Task Guardar()
    {

        if (await estadosService.NombreExiste(Estado.Descripcion))
        {
            Toast.Notify(new(ToastType.Danger, $"Estado existente. Elija otro"));
        }
        else if (string.IsNullOrWhiteSpace(Estado.Descripcion))
        {
            Toast.Notify(new(ToastType.Danger, $"Debe ingresar una descripcion"));
        }
        else
        {
            await estadosService.Guardar(Estado);
            Estado = new EstadosDto();
            Toast.Notify(new(ToastType.Success, $"Estado guardado correctamente"));
            await Task.Delay(3000);
            navigationManager.NavigateTo("/Estados/Index");

        }
    }
}
