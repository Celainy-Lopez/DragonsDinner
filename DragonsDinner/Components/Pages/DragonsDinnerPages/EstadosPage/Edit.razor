@page "/Estados/Edit/{EstadoId:int}"
@rendermode InteractiveServer
@inject EstadosService estadosService
@inject NavigationManager navigationManager
@inject ToastService Toast

<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />

<!-- bootstrap core css -->
<link rel="stylesheet" type="text/css" href="css/bootstrap.css" />

<!--owl slider stylesheet -->
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css" />
<!-- nice select  -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-nice-select/1.1.0/css/nice-select.min.css" integrity="sha512-CruCP+TD3yXzlvvijET8wV5WxxEh5H8P4cmz0RFbKK6FlZ2sYl3AEsKlLPHbniXKSrDdFewhbmBK5skbdsASbQ==" crossorigin="anonymous" />
<!-- font awesome style -->
<link href="css/font-awesome.min.css" rel="stylesheet" />

<!-- Custom styles for this template -->
<link href="css/style.css" rel="stylesheet" />
<!-- responsive style -->
<link href="css/responsive.css" rel="stylesheet" />

<link href="CreateCategorias.css" rel="stylesheet" />


<div class="bg-box">
	<img src="/images/Fondo.jpg" alt="">
</div>

<PageTitle>Editar estado</PageTitle>
<EditForm Model="Estado" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />
	<div class="container">
		<div class="card central-card shadow-lg">
			<div class="card-header text-center">
				<h2 class="card-title">Editar Estado</h2>
			</div>
			<div class="card-body">
				@* Id *@
				<div class="mb-3">
					<label class="form-label"><strong>Id </strong></label>
					<InputNumber class="form-control" @bind-Value="Estado.EstadoId" readonly></InputNumber>
				</div>

				@*Descripcion*@
				<label for="descripcion" class="form-label"><strong>Descripci&oacute;n </strong></label>
				<InputText id="descripcion" class="form-control" @bind-Value="Estado.Descripcion"> </InputText>
				<ValidationMessage For="@(() => Estado.Descripcion)"></ValidationMessage>
				<div />
				<div class="card-footer">
					<a href="/Estados/Index"
					   class="btn btn-outline-secondary">
						<span class="bi bi-arrow-left mt-3"></span> Volver
					</a>
					<button type="submit" class="btn btn-outline-success bi bi-pencil-square"> Modificar</button>
				</div>
			</div>
		</div>
	</div>

</EditForm>

@code {

	[Parameter]
	public int EstadoId { get; set; }
	public EstadosDto Estado { get; set; } = new EstadosDto();

	protected override async Task OnInitializedAsync()
	{
		if (EstadoId > 0)
		{
			Estado = await estadosService.Buscar(EstadoId);
		}

	}

	public async Task Guardar()
	{
		var estadoOriginal = await estadosService.Buscar(EstadoId);

		if (Estado.Descripcion != estadoOriginal.Descripcion && await estadosService.NombreExiste(Estado.Descripcion))
		{
			Toast.Notify(new(ToastType.Danger, $"Estado existente, por favor elija otro"));
		}
		else if (string.IsNullOrWhiteSpace(Estado.Descripcion))
		{
			Toast.Notify(new(ToastType.Danger, $"Debe ingresar una descripcion"));
		}
		else if (Estado.Descripcion == estadoOriginal.Descripcion)
		{
			Toast.Notify(new(ToastType.Warning, $"No ha realizado ninguna modificación"));
		}
		else
		{
			await estadosService.Guardar(Estado);
			Estado = new EstadosDto();
			Toast.Notify(new(ToastType.Success, $"El estado ha sido modificado correctamente"));
			await Task.Delay(3000);
			navigationManager.NavigateTo("/Estados/Index");
		}
	}
}