@page "/Categorias/Index"
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@inject CategoriasService categoriasService
@attribute [Authorize(Roles = "Admin")]

<!-- bootstrap core css -->
<link rel="stylesheet" type="text/css" href="css/bootstrap.css" />

<!--owl slider stylesheet -->
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css" />
<!-- nice select  -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-nice-select/1.1.0/css/nice-select.min.css" integrity="sha512-CruCP+TD3yXzlvvijET8wV5WxxEh5H8P4cmz0RFbKK6FlZ2sYl3AEsKlLPHbniXKSrDdFewhbmBK5skbdsASbQ==" crossorigin="anonymous" />
<!-- font awesome style -->
<link href="css/font-awesome.min.css" rel="stylesheet" />

<!-- Custom styles for this template -->
<link href="css/style.css" rel="stylesheet" />
<!-- responsive style -->
<link href="css/responsive.css" rel="stylesheet" />



<div class="bg-box">
    <img src="/images/Fondo.jpg" alt="">
</div>

<PageTitle> Index Categorias</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header">
            <h5 class="card-title text-center">Registro de Categorias</h5>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="filtrarPor"> Filtrar por:</label>
                    <InputSelect id="filtrarPor" class="form-select" @bind-Value="FiltroSeleccionado">
                        <option value="ID">ID</option>
                        <option value="Nombre">Nombre</option>
                    </InputSelect>
                </div>

                <div class="col-md-6 d-flex justify-content-center mt-4">
                    <div class="input-group">
                        <InputText id="Busqueda" class="form-control" @bind-Value="CriterioBusqueda"></InputText>
                        <button @onclick="BuscarCategoria" class="btn btn-outline-primary bi bi-search"> Buscar</button>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col text-end">
                    <a href="/Categorias/Create" class="btn btn-primary bi bi-plus-square mt-3"> Crear</a>
                </div>
            </div>

            <table class="table table-light table-hover">
                <thead class="table table-striped">
                    <tr class="text-center">
                        <th>Categoria Id</th>
                        <th>Nombre</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var categoria in Categorias)
                    {
                        <tr class="text-center">
                            <td>@categoria.CategoriaId</td>
                            <td>@categoria.Nombre</td>
                            <td><a href="/Categorias/Edit/@categoria.CategoriaId" class="btn btn-outline-primary bi bi-pencil-square"></a></td>
                            <td><a href="/Categorias/Delete/@categoria.CategoriaId" class="btn btn-outline-danger bi bi-trash"></a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer">
            <p><strong>Total de Tarjetas: </strong>@Categorias.Count</p>
        </div>
    </div>
</div>


@code {
    public List<CategoriasDto> Categorias { get; set; } = new List<CategoriasDto>();
    private string FiltroSeleccionado { get; set; } = "ID";
    private string CriterioBusqueda { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Categorias = await categoriasService.Listar(a => true);
    }

    private async Task BuscarCategoria()
    {
        switch (FiltroSeleccionado)
        {
            case "ID":
                if (int.TryParse(CriterioBusqueda, out int id))
                {
                    Categorias = await categoriasService.Listar(a => a.CategoriaId == id);
                }
                break;

            case "Nombre":
                Categorias = await categoriasService.Listar(e => e.Nombre.ToLower().Contains(CriterioBusqueda.ToLower()));
                break;
        }
    }

    private async Task RefrescarDatos()
    {
        Categorias = await categoriasService.Listar(a => true);
        CriterioBusqueda = string.Empty;
    }

}